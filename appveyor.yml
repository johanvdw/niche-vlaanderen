environment:
  matrix:
    - PYTHON_VERSION: "3.6"
      PYTHON_ARCH: "64"
      CONDA_PY: "36"
      RASTERIO_CONDA: "-c conda-forge/label/dev rasterio"
      MINICONDA: "C:\\Miniconda36-x64"
    - PYTHON_VERSION: "3.5"
      PYTHON_ARCH: "64"
      CONDA_PY: "35"
      MINICONDA: "C:\\Miniconda35-x64"
    - PYTHON_VERSION: "3.7"
      PYTHON_ARCH: "64"
      CONDA_PY: "37"
      MINICONDA: "C:\\Miniconda37-x64"
    - PYTHON_VERSION: "2.7"
      PYTHON_ARCH: "32"
      CONDA_PY: "27"
      MINICONDA: "C:\\Miniconda"

install:
    # Use the pre-installed Miniconda for the desired arch
    - call %MINICONDA%\Scripts\activate.bat
    - conda update -y -q conda
      # restore conda links https://github.com/conda/conda/issues/7144
    - mklink /J C:\Miniconda3-x64 %MINICONDA%
    - conda config --system --add pinned_packages defaults::conda
    - conda create --name niche_env -y -q python=%PYTHON_VERSION%
    - activate niche_env
    - conda config --add channels conda-forge
    - conda install -y -q rasterio fiona pandas
    - pip install --no-cache-dir -r dev-requirements.txt

build: false

test_script:
    - call %CONDA_INSTALL_LOCN%\Scripts\activate.bat
    - activate niche_env   
      # note we use an env to make sure GDAL_DATA is correctly set
      # we must do this again after installation because setting the variable is
      # triggered on activation.
    - pytest --verbose --tb=long

# uncomment to debug appveyor (login to vm)
# init:
#   - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
# 
# on_finish:
#   - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
